{"name":"OverflowAndroid","tagline":"The polyfill for `overflow:scroll` / `overflow:auto` and `element.scrollLeft` / `element.scrollTop` on Android browser.","body":"# OverflowAndroid\r\n\r\nThe polyfill for `overflow:scroll` / `overflow:auto` and `element.scrollLeft` / `element.scrollTop` on Android browser.\r\n\r\nAndroid browser has problems as below:\r\n\r\n- `overflow:scroll` and `overflow:auto` don't work on Android 2.x. The elements don't accept swipe operation.\r\n- `element.scrollLeft` and `element.scrollTop` don't work on Android 4.0.x. The elements can't scroll via JavaScript. Strange to say, the element that is set `overflow:hidden` can scroll. But of course that element doesn't accept swipe operation.\r\n\r\nThis polyfill solves above problems both.\r\n\r\n## Usage\r\n[Hammer.js](http://hammerjs.github.io/) is required.\r\n\r\n```html\r\n<script src=\"hammer.min.js\"></script>\r\n<script src=\"overflow-android.min.js\"></script>\r\n```\r\n\r\n```html\r\n<!-- This `overflow:auto` isn't necessary. It works on desktop PC as native. -->\r\n<div id=\"view\" style=\"overflow: auto; width: 300px; height: 300px;\">  <!-- Like an iframe window -->\r\n  <div style=\"width: 900px; height: 600px;\">                          <!-- Like an iframe document -->\r\n    <img src=\"photo.jpg\" width=\"900\" height=\"600\" alt=\"sample\">\r\n  </div>\r\n</div>\r\n```\r\n\r\n```js\r\nvar element = document.getElementById('view');\r\nnew OverflowAndroid(element);\r\n// Now, the element accepts swipe operation.\r\n\r\n// And it can scroll via scrollLeft/scrollTop.\r\nelement.scrollLeft = 30;\r\n```\r\n\r\n## Constructor\r\n\r\n```js\r\noverflowA = new OverflowAndroid(viewElement);\r\n```\r\n\r\nThe `OverflowAndroid` constructor accepts a element that is scrolling frame. It get first child element that includes contents and it moves when scrolling. The specified element like an `iframe` window, and the first child element like an `iframe` document.  \r\nThat has already finished. Now, the specified element accept swipe operation, and it can scroll via `scrollLeft`/`scrollTop`.  \r\nAnd the instance that is returned by constructor has some methods. (see below)  \r\nNOTE: The contents that is included in specified element other than first child element of it are ignored.\r\n\r\n## Methods\r\n\r\n### `scrollLeft`\r\n\r\n```js\r\noverflowA.scrollLeft([scrollPosition])\r\n```\r\n\r\nReturn the number of pixels that the element's content is scrolled to the left. If an argument is given, the element scrolls to specified position and it is returned.  \r\nThis work equals `element.scrollLeft` property.\r\n\r\n### `scrollTop`\r\n\r\n```js\r\noverflowA.scrollTop([scrollPosition])\r\n```\r\n\r\nReturn the number of pixels that the element's content is scrolled upward. If an argument is given, the element scrolls to specified position and it is returned.  \r\nThis work equals `element.scrollTop` property.\r\n\r\n### `initSize`\r\n\r\n```js\r\noverflowA.initSize()\r\n```\r\n\r\nOverflowAndroid computes the size of elements for scroll. It computes again when a window is resized.  \r\nIf you change the size of elements, you must call this method.\r\n\r\n## Options\r\n\r\nYou can tune the behavior of OverflowAndroid via options below.\r\n\r\n### `OverflowAndroid.enable`\r\n\r\nAs default, OverflowAndroid works only touch-device. You can control the working or not via specifying a boolean to this option.  \r\nNOTE: This must be done before making an instance.\r\n\r\nExample:\r\n\r\n```js\r\n// Android only\r\nOverflowAndroid.enable = navigator.userAgent.indexOf('Android') > 0;\r\n```\r\n\r\n```js\r\n// Anytime\r\nOverflowAndroid.enable = true;\r\n```\r\n\r\n### `OverflowAndroid.fps`\r\nThis is frame rate for inertia scroll animation when swipe operation. This is a number of frames per second. `60` as default.\r\n\r\n### `OverflowAndroid.friction`\r\nThis is strength of slowdown for inertia scroll animation when swipe operation. This is a number of pixels per milli second. `0.001` as default.\r\n\r\n## See Also\r\n\r\n[jQuery.overflowAndroid](https://github.com/anseki/jquery-overflow-android) is jQuery plugin that is wrapper of OverflowAndroid.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}